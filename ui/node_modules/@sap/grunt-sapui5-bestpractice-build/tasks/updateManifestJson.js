var path = require('path');

function updateManifestDeploymentBlockUri(oManfiestDeploymentBlock, sSourceFolderPathInProject){
    if (oManfiestDeploymentBlock.uri !== null) {
        var sManifestUri = oManfiestDeploymentBlock.uri; //current uri in manifest
        if ((sSourceFolderPathInProject) && sSourceFolderPathInProject !== "") { //when source folder empty (root) - no update needed (paths within target and source are the same)
            var indexOfSourceFolder = sManifestUri.lastIndexOf(sSourceFolderPathInProject); //verify the specified src folder exist in current uri
            if (indexOfSourceFolder !== -1) {
                var sUriPrefix = sManifestUri.substring(0, indexOfSourceFolder); //uri prefix before the source folder path (keep the '/' before the src path)
                var sUpdatedUri = sUriPrefix; //includes the previous prefix (e.g abap path to the application) and the rest is the manifest path within target
                oManfiestDeploymentBlock.uri = sUpdatedUri;
            }
        }
    }
    else{
        throw new Error("devxUpdateManifest - no uri defined in manifest.json file");
    }
};

function  updateManifestDatasourceUri(oManfiestApplicationBlock) {
    if (oManfiestApplicationBlock) {
        if (!oManfiestApplicationBlock.id) {
            throw new Error("devxUpdateManifest - Incorrect manifest.json structure, id undefined");
        }
        if (!oManfiestApplicationBlock.applicationVersion) {
            throw new Error("devxUpdateManifest - Incorrect manifest.json structure, applicationVersion undefined");
        }
        if (!oManfiestApplicationBlock.applicationVersion.version) {
            throw new Error("devxUpdateManifest - Incorrect manifest.json structure, applicationVersion.version undefined");
        }
        if (!oManfiestApplicationBlock.dataSources) {
            throw new Error("devxUpdateManifest - Incorrect manifest.json structure, dataSources undefined");
        }
        for(sDataSourceName in oManfiestApplicationBlock.dataSources){
            var oDataSource = oManfiestApplicationBlock.dataSources[sDataSourceName];
            if(oDataSource.uri && oDataSource.uri != null){
                if(oDataSource.uri[0] === "/"){
                    oDataSource.uri = oDataSource.uri.substring(1);
                }
            } else{
                throw new Error("devxUpdateManifest - Incorrect manifest.json structure, uri undefined for datasource");
            }
        }
    } else {
        throw new Error("devxUpdateManifest - Incorrect manifest.json structure, application block is undefined");
    }
};

function updateManifestFile(grunt, appFolder, tmpDir){
    var sManifestFile = path.join(tmpDir, "manifest.json");
    var bManifestExists = grunt.file.exists(sManifestFile);
    if (bManifestExists){
        var oManifestJsonContent = grunt.file.readJSON(sManifestFile);
        if (oManifestJsonContent["sap.platform.hcp"]) {
            updateManifestDeploymentBlockUri(oManifestJsonContent["sap.platform.hcp"], appFolder);
        }
        if (oManifestJsonContent["sap.platform.abap"]) {
            updateManifestDeploymentBlockUri(oManifestJsonContent["sap.platform.abap"], appFolder);
        }
        // get deploy_mode flag from the Gruntfile.js of the module - will be exist only in case of html repo scenario
        var deployMode = grunt.config.get("deploy_mode");
        if (!!deployMode && deployMode === "html_repo") {
            updateManifestDatasourceUri(oManifestJsonContent["sap.app"]);
        }
        grunt.file.write(sManifestFile, JSON.stringify(oManifestJsonContent));
    }
    else{
        throw new Error("devxUpdateManifest - no manifest.json file found in project");
    }
};

module.exports = function(grunt) {
    grunt.registerTask('devxUpdateManifest', 'Update manifest.json for build', function () {

        var appFolder = grunt.task.current.options().dest;
        var tmpDir = grunt.task.current.options().src;

        try {
            updateManifestFile(grunt, appFolder, tmpDir);
        } catch(e) {
            grunt.log.error('failed to update manifest.json file ' + e.message);
        }
    });
}
